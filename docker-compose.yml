version: '3.8'

services:
  frontend:
    build:
      context: ../zkKYC-frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=/api
    volumes:
      - /app/node_modules
    networks:
      - zkkyc-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ../zkKYC-backend
      dockerfile: Dockerfile
    environment:
      - SERVER_ADDRESS=:8080
      - DATABASE_DSN=host=db port=5432 user=postgres password=password dbname=postgres sslmode=disable
      - JWT_SECRET=HJ<M])16oCE_FOpq7~4@+.KdrkbGUej2
    ports:
      - "8080:8080"
    networks:
      - zkkyc-network
    depends_on:
      - db

  nginx:
    image: nginx:stable-alpine3.21
    volumes:
      - ../zkKYC-frontend/default.conf:/etc/nginx/conf.d/default.conf
      - ../zkKYC-frontend/public:/usr/share/nginx/html
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - zkkyc-network
    depends_on:
      - frontend
      - backend

  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - zkkyc-network

volumes:
  postgres-data:

networks:
  zkkyc-network:
    driver: bridge